<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.kk20.chat.dao.mapper.ApplyLogModelMapper">
  <resultMap id="BaseResultMap" type="cn.kk20.chat.dao.model.ApplyLogModel">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="apply_user_id" jdbcType="BIGINT" property="applyUserId" />
    <result column="target_user_id" jdbcType="BIGINT" property="targetUserId" />
    <result column="verify_user_id" jdbcType="BIGINT" property="verifyUserId" />
    <result column="is_agree" jdbcType="BIT" property="isAgree" />
    <result column="apply_remark" jdbcType="VARCHAR" property="applyRemark" />
    <result column="verify_remark" jdbcType="VARCHAR" property="verifyRemark" />
    <result column="is_delete" jdbcType="BIT" property="isDelete" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="modify_date" jdbcType="TIMESTAMP" property="modifyDate" />
  </resultMap>
  <sql id="Condition_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Condition_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `type`, apply_user_id, target_user_id, verify_user_id, is_agree, apply_remark, 
    verify_remark, is_delete, create_date, modify_date
  </sql>
  <select id="selectByCondition" parameterType="cn.kk20.chat.dao.model.ApplyLogModelQuery" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from c_apply_log
    <if test="_parameter != null">
      <include refid="Condition_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from c_apply_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from c_apply_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByCondition" parameterType="cn.kk20.chat.dao.model.ApplyLogModelQuery">
    delete from c_apply_log
    <if test="_parameter != null">
      <include refid="Condition_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.kk20.chat.dao.model.ApplyLogModel">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into c_apply_log (`type`, apply_user_id, target_user_id, 
      verify_user_id, is_agree, apply_remark, 
      verify_remark, is_delete, create_date, 
      modify_date)
    values (#{type,jdbcType=TINYINT}, #{applyUserId,jdbcType=BIGINT}, #{targetUserId,jdbcType=BIGINT}, 
      #{verifyUserId,jdbcType=BIGINT}, #{isAgree,jdbcType=BIT}, #{applyRemark,jdbcType=VARCHAR}, 
      #{verifyRemark,jdbcType=VARCHAR}, #{isDelete,jdbcType=BIT}, #{createDate,jdbcType=TIMESTAMP}, 
      #{modifyDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.kk20.chat.dao.model.ApplyLogModel">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into c_apply_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="type != null">
        `type`,
      </if>
      <if test="applyUserId != null">
        apply_user_id,
      </if>
      <if test="targetUserId != null">
        target_user_id,
      </if>
      <if test="verifyUserId != null">
        verify_user_id,
      </if>
      <if test="isAgree != null">
        is_agree,
      </if>
      <if test="applyRemark != null">
        apply_remark,
      </if>
      <if test="verifyRemark != null">
        verify_remark,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="modifyDate != null">
        modify_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="applyUserId != null">
        #{applyUserId,jdbcType=BIGINT},
      </if>
      <if test="targetUserId != null">
        #{targetUserId,jdbcType=BIGINT},
      </if>
      <if test="verifyUserId != null">
        #{verifyUserId,jdbcType=BIGINT},
      </if>
      <if test="isAgree != null">
        #{isAgree,jdbcType=BIT},
      </if>
      <if test="applyRemark != null">
        #{applyRemark,jdbcType=VARCHAR},
      </if>
      <if test="verifyRemark != null">
        #{verifyRemark,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=BIT},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null">
        #{modifyDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByCondition" parameterType="cn.kk20.chat.dao.model.ApplyLogModelQuery" resultType="java.lang.Long">
    select count(*) from c_apply_log
    <if test="_parameter != null">
      <include refid="Condition_Where_Clause" />
    </if>
  </select>
  <update id="updateByConditionSelective" parameterType="map">
    update c_apply_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.applyUserId != null">
        apply_user_id = #{record.applyUserId,jdbcType=BIGINT},
      </if>
      <if test="record.targetUserId != null">
        target_user_id = #{record.targetUserId,jdbcType=BIGINT},
      </if>
      <if test="record.verifyUserId != null">
        verify_user_id = #{record.verifyUserId,jdbcType=BIGINT},
      </if>
      <if test="record.isAgree != null">
        is_agree = #{record.isAgree,jdbcType=BIT},
      </if>
      <if test="record.applyRemark != null">
        apply_remark = #{record.applyRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.verifyRemark != null">
        verify_remark = #{record.verifyRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=BIT},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyDate != null">
        modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Condition_Where_Clause" />
    </if>
  </update>
  <update id="updateByCondition" parameterType="map">
    update c_apply_log
    set id = #{record.id,jdbcType=BIGINT},
      `type` = #{record.type,jdbcType=TINYINT},
      apply_user_id = #{record.applyUserId,jdbcType=BIGINT},
      target_user_id = #{record.targetUserId,jdbcType=BIGINT},
      verify_user_id = #{record.verifyUserId,jdbcType=BIGINT},
      is_agree = #{record.isAgree,jdbcType=BIT},
      apply_remark = #{record.applyRemark,jdbcType=VARCHAR},
      verify_remark = #{record.verifyRemark,jdbcType=VARCHAR},
      is_delete = #{record.isDelete,jdbcType=BIT},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      modify_date = #{record.modifyDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Condition_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.kk20.chat.dao.model.ApplyLogModel">
    update c_apply_log
    <set>
      <if test="type != null">
        `type` = #{type,jdbcType=TINYINT},
      </if>
      <if test="applyUserId != null">
        apply_user_id = #{applyUserId,jdbcType=BIGINT},
      </if>
      <if test="targetUserId != null">
        target_user_id = #{targetUserId,jdbcType=BIGINT},
      </if>
      <if test="verifyUserId != null">
        verify_user_id = #{verifyUserId,jdbcType=BIGINT},
      </if>
      <if test="isAgree != null">
        is_agree = #{isAgree,jdbcType=BIT},
      </if>
      <if test="applyRemark != null">
        apply_remark = #{applyRemark,jdbcType=VARCHAR},
      </if>
      <if test="verifyRemark != null">
        verify_remark = #{verifyRemark,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=BIT},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null">
        modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.kk20.chat.dao.model.ApplyLogModel">
    update c_apply_log
    set `type` = #{type,jdbcType=TINYINT},
      apply_user_id = #{applyUserId,jdbcType=BIGINT},
      target_user_id = #{targetUserId,jdbcType=BIGINT},
      verify_user_id = #{verifyUserId,jdbcType=BIGINT},
      is_agree = #{isAgree,jdbcType=BIT},
      apply_remark = #{applyRemark,jdbcType=VARCHAR},
      verify_remark = #{verifyRemark,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=BIT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      modify_date = #{modifyDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>